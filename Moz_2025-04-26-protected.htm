<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="noindex, nofollow">
    <title>Password Protected Page</title>
    <style>
        html, body {
            margin: 0;
            width: 100%;
            height: 100%;
            font-family: Arial, Helvetica, sans-serif;
        }
        #dialogText {
            color: white;
            background-color: #333333;
        }
        
        #dialogWrap {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: table;
            background-color: #EEEEEE;
        }
        
        #dialogWrapCell {
            display: table-cell;
            text-align: center;
            vertical-align: middle;
        }
        
        #mainDialog {
            max-width: 400px;
            margin: 5px;
            border: solid #AAAAAA 1px;
            border-radius: 10px;
            box-shadow: 3px 3px 5px 3px #AAAAAA;
            margin-left: auto;
            margin-right: auto;
            background-color: #FFFFFF;
            overflow: hidden;
            text-align: left;
        }
        #mainDialog > * {
            padding: 10px 30px;
        }
        #passArea {
            padding: 20px 30px;
            background-color: white;
        }
        #passArea > * {
            margin: 5px auto;
        }
        #pass {
            width: 100%;
            height: 40px;
            font-size: 30px;
        }
        
        #messageWrapper {
            float: left;
            vertical-align: middle;
            line-height: 30px;
        }
        
        .notifyText {
            display: none;
        }
        
        #invalidPass {
            color: red;
        }
        
        #success {
            color: green;
        }
        
        #submitPass {
            font-size: 20px;
            border-radius: 5px;
            background-color: #E7E7E7;
            border: solid gray 1px;
            float: right;
            cursor: pointer;
        }
        #contentFrame {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
        #attribution {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            text-align: center;
            padding: 10px;
            font-weight: bold;
            font-size: 0.8em;
        }
        #attribution, #attribution a {
            color: #999;
        }
        .error {
            display: none;
            color: red;
        }
    </style>
  </head>
  <body>
    <iframe id="contentFrame" frameBorder="0" allowfullscreen></iframe>
    <div id="dialogWrap">
        <div id="dialogWrapCell">
            <div id="mainDialog">
                <div id="dialogText">Deze pagina is beveiligd met een wachtwoord.</div>
                <div id="passArea">
                    <p id="passwordPrompt">Password</p>
                    <input id="pass" type="password" name="pass" autofocus>
                    <div>
                        <span id="messageWrapper">
                            <span id="invalidPass" class="error">Sorry, probeer het opnieuw.</span>
                            <span id="trycatcherror" class="error">Sorry, er ging iets mis.</span>
                            <span id="success" class="notifyText">Succes!</span>
                            &nbsp;
                        </span>
                        <button id="submitPass" type="button">Verzend</button>
                        <div style="clear: both;"></div>
                    </div>
                </div>
                <div id="securecontext" class="error">
                    <p>
                        Sorry, maar wachtwoordbeveiliging werkt alleen via een beveiligde verbinding. Laad deze pagina via HTTPS.
                    </p>
                </div>
                <div id="nocrypto" class="error">
                    <p>
                        Je webbrowser lijkt verouderd te zijn. Bezoek deze pagina met een moderne browser.
                    </p>
                </div>
            </div>
        </div>
    </div>
    <div id="attribution">
        Protected by <a href="https://www.maxlaumeister.com/pagecrypt/">PageCrypt</a>
    </div>
    <script>
    (function() {

        var pl = "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";
        
        var submitPass = document.getElementById('submitPass');
        var passEl = document.getElementById('pass');
        var invalidPassEl = document.getElementById('invalidPass');
        var trycatcherror = document.getElementById('trycatcherror');
        var successEl = document.getElementById('success');
        var contentFrame = document.getElementById('contentFrame');
        
        // Sanity checks

        if (pl === "") {
            submitPass.disabled = true;
            passEl.disabled = true;
            alert("This page is meant to be used with the encryption tool. It doesn't work standalone.");
            return;
        }

        if (!isSecureContext) {
            document.querySelector("#passArea").style.display = "none";
            document.querySelector("#securecontext").style.display = "block";
            return;
        }

        if (!crypto.subtle) {
            document.querySelector("#passArea").style.display = "none";
            document.querySelector("#nocrypto").style.display = "block";
            return;
        }
        
        function str2ab(str) {
            var ustr = atob(str);
            var buf = new ArrayBuffer(ustr.length);
            var bufView = new Uint8Array(buf);
            for (var i=0, strLen=ustr.length; i < strLen; i++) {
                bufView[i] = ustr.charCodeAt(i);
            }
            return bufView;
        }

        async function deriveKey(salt, password) {
            const encoder = new TextEncoder()
            const baseKey = await crypto.subtle.importKey(
                'raw',
                encoder.encode(password),
                'PBKDF2',
                false,
                ['deriveKey'],
            )
            return await crypto.subtle.deriveKey(
                { name: 'PBKDF2', salt, iterations: 100000, hash: 'SHA-256' },
                baseKey,
                { name: 'AES-GCM', length: 256 },
                true,
                ['decrypt'],
            )
        }
        
        async function doSubmit(evt) {
            submitPass.disabled = true;
            passEl.disabled = true;

            let iv, ciphertext, key;
            
            try {
                var unencodedPl = str2ab(pl);

                const salt = unencodedPl.slice(0, 32)
                iv = unencodedPl.slice(32, 32 + 16)
                ciphertext = unencodedPl.slice(32 + 16)

                key = await deriveKey(salt, passEl.value);
            } catch (e) {
                trycatcherror.style.display = "inline";
                console.error(e);
                return;
            }

            try {
                const decryptedArray = new Uint8Array(
                    await crypto.subtle.decrypt({ name: 'AES-GCM', iv }, key, ciphertext)
                );

                let decrypted = new TextDecoder().decode(decryptedArray);

                if (decrypted === "") throw "No data returned";

                const basestr = '<base href="." target="_top">';
                const anchorfixstr = `
                    <script>
                        Array.from(document.links).forEach((anchor) => {
                            const href = anchor.getAttribute("href");
                            if (href.startsWith("#")) {
                                anchor.addEventListener("click", function(e) {
                                    e.preventDefault();
                                    const targetId = this.getAttribute("href").substring(1);
                                    const targetEl = document.getElementById(targetId);
                                    targetEl.scrollIntoView();
                                });
                            }
                        });
                    <\/script>
                `;
                
                // Set default iframe link targets to _top so all links break out of the iframe
                if (decrypted.includes("<head>")) decrypted = decrypted.replace("<head>", "<head>" + basestr);
                else if (decrypted.includes("<!DOCTYPE html>")) decrypted = decrypted.replace("<!DOCTYPE html>", "<!DOCTYPE html>" + basestr);
                else decrypted = basestr + decrypted;

                // Fix fragment links
                if (decrypted.includes("</body>")) decrypted = decrypted.replace("</body>", anchorfixstr + '</body>');
                else if (decrypted.includes("</html>")) decrypted = decrypted.replace("</html>", anchorfixstr + '</html>');
                else decrypted = decrypted + anchorfixstr;
                
                contentFrame.srcdoc = decrypted;
                
                successEl.style.display = "inline";
                setTimeout(function() {
                    dialogWrap.style.display = "none";
                }, 1000);
            } catch (e) {
                invalidPassEl.style.display = "inline";
                passEl.value = "";
                submitPass.disabled = false;
                passEl.disabled = false;
                console.error(e);
                return;
            }
        }
        
        submitPass.onclick = doSubmit;
        passEl.onkeypress = function(e){
            if (!e) e = window.event;
            var keyCode = e.keyCode || e.which;
            invalidPassEl.style.display = "none";
            if (keyCode == '13'){
              // Enter pressed
              doSubmit();
              return false;
            }
        }
    })();
    </script>
  </body>
</html>
